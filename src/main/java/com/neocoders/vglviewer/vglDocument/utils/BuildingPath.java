/* Generated by Together */

package com.neocoders.vglviewer.vglDocument.utils;

import com.neocoders.vglviewer.vglDocument.VGLPoints;
import com.neocoders.vglviewer.vglDocument.VGLProperties;
import com.neocoders.vglviewer.vglDocument.VGLStyle;
import com.neocoders.vglviewer.vglDocument.VGLPoint;
import java.util.Vector;
import java.util.Iterator;
import com.neocoders.vglviewer.vglDocument.VGLPath;

class BuildingPath extends AbstractBuilderState {
    /** Initialise new state in which we are building a path */
    public BuildingPath(BuildContext context, AbstractBuilderState parent) {
        super(context, parent);
        this.style = context.getDefaultStyle();
        this.description = "none";
        this.id = context.getID();
        this.points = new Vector();
    }

    /** Add a vertex to path */
    public void addVertex(long x, long y) {
        points.add(new VGLPoint(x, y));
    }

    /** Apply a previously defined style to path */
    public void applyStyle(String styleName) {
        VGLStyle temp = context.getStyle(styleName);
        if (temp == null) {
            context.getErrorHandler().handleError("no style named '" + styleName + "' defined");
        }
        this.style = temp;
    }

    /** Build path, add it to document, return parent state */
    public AbstractBuilderState close() {
        long[] sx = new long[points.size()];
        long[] sy = new long[points.size()];
        Iterator iterator = points.iterator();
        int i = 0;
        while (iterator.hasNext()) {
            VGLPoint p = (VGLPoint)iterator.next();
            sx[i] = p.x;
            sy[i] = p.y;
            i++;
        }
        VGLPath element = new VGLPath(new VGLProperties(style, description, id), new VGLPoints(sx, sy));
        context.getDocument().addElement(element);
        return parent;
    }

    /** Get description of what we are building in this state */
    protected String getDescription() {
        return "a path";
    }

    private VGLStyle style;
    private String description;
    private String id;
    private Vector points;
}
