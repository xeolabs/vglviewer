/* Generated by Together */

package com.neocoders.vglviewer.vglDocument.utils;

import com.neocoders.vglviewer.vglDocument.VGLPoint;
import com.neocoders.vglviewer.vglDocument.VGLStyle;
import com.neocoders.vglviewer.vglDocument.VGLCircle;
import com.neocoders.vglviewer.vglDocument.VGLProperties;

class BuildingCircle extends AbstractBuilderState {
    /** Initialise new state in which we are building a circle */
    public BuildingCircle(BuildContext context, AbstractBuilderState parent) {
        super(context, parent);
        this.style = context.getDefaultStyle();
        this.centre = null;
        this.radius = -1L;
        this.id = context.getID();
    }

    public void setCentre(long x, long y) {
        centre = new VGLPoint(x, y);
    }

    public void setRadius(long radius) {
        if (radius <= 0L) {
            context.getErrorHandler().handleError("illegal circle radius: " + radius + " - using default radius of 1");
            radius = 1L;
            return;
        }
        this.radius = radius;
    }

    /** Apply a previously defined style to circle */
    public void applyStyle(String styleName) {
        VGLStyle temp = context.getStyle(styleName);
        if (temp == null) {
            context.getErrorHandler().handleError("no style named '" + styleName + "' defined");
        }
        this.style = temp;
    }

    /** Build polygon, add it to document, return parent state */
    public AbstractBuilderState close() {
        if (centre == null) {
            context.getErrorHandler().handleError("no centre specified for circle - circle not created");
            return parent;
        }
        if (radius == -1L) {
            context.getErrorHandler().handleError("no radius specified for circle - circle not created");
            return parent;
        }
        VGLCircle element = new VGLCircle(new VGLProperties(style, description, id), centre, radius);
        context.getDocument().addElement(element);
        return parent;
    }

    /** Get description of what we are building in this state */
    protected String getDescription() {
        return "a circle";
    }

    private VGLStyle style;
    private String description;
    private String id;
    private VGLPoint centre;
    private long radius;
}
