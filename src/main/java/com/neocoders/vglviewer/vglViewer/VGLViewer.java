/* Generated by Together */

package com.neocoders.vglviewer.vglViewer;

import java.awt.Frame;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import com.neocoders.vglviewer.vglDocument.utils.Logger;
import com.neocoders.vglviewer.vglDocument.utils.VGLDocumentBuilder;
import com.neocoders.vglviewer.vglDocument.utils.VGLDocumentLoader;
import com.neocoders.vglviewer.vglDocument.VGLDocument;
import java.util.Iterator;

public class VGLViewer {
	public VGLViewer(String vglUrlStr) {
		init(vglUrlStr);
	}

	public static void main(String[] argv) {
		if (argv.length != 1) {
			System.out.println("VGL file name expected");
			return;
		}
		new VGLViewer(argv[0]);
	}

	private void init(String vglUrlStr) {
		try {
			errorHandler = new MultiErrorHandler();
			initGUI();
			loadVGL(vglUrlStr);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void initGUI() {
		frame = new Frame();
		frame.setLayout(new GridBagLayout());
		GridBagConstraints c = new GridBagConstraints();
		viewPanel = new ViewPanel();
		c.gridx = 0;
		c.gridy = 0;
		c.weightx = 1.0;
		c.weighty = 1.0;
		c.fill = GridBagConstraints.BOTH;
		frame.add(viewPanel, c);
		frame.setSize(800, 600);
		frame.validate();
		frame.setResizable(false);
		frame.setVisible(true);
	}

	private void loadVGL(String vglUrlStr) throws Exception {
		errorHandler.reset();
		Logger logger = new Logger() {
			public void log(String msg) {
				// System.out.println(msg);
			}
		};
		AWT_VGLFontFactory fontFactory = new AWT_VGLFontFactory(viewPanel);
		VGLDocumentBuilder builder = new VGLDocumentBuilder(errorHandler,
				fontFactory);
		builder.setLogger(logger);
		VGLDocumentLoader loader = new VGLDocumentLoader(builder);
		loader.setErrorHandler(errorHandler);
		VGLDocument doc = loader.load(vglUrlStr);
		if (errorHandler.getNumErrors() > 0) {
			reportErrors(vglUrlStr);
		} else {
			viewPanel.setDocument(doc);
		}
	}

	private void reportErrors(String url) {
		Iterator errors = errorHandler.getErrors();
		int i = 1;
		StringBuffer sb = new StringBuffer("Error(s) loading VGL file '" + url
				+ "':");
		while (errors.hasNext()) {
			sb.append("\nError " + i + ": " + (String) errors.next());
		}
		viewPanel.setStatusMessage(sb.toString());
	}

	/**
	 * @link aggregationByValue
	 * @supplierCardinality 1
	 * @clientCardinality 1
	 */
	private ViewPanel viewPanel;

	/**
	 * @clientCardinality 1
	 * @supplierCardinality 1
	 * @link aggregationByValue
	 */
	private MultiErrorHandler errorHandler;

	private Frame frame;
}
