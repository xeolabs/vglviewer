/* Generated by Together */

package vglRenderer;

import vglDocument.VGLColor;

/**
 * Defines a strategy for a VGLDocumentRenderer to use when rendering
 * VGLDocument elements. A graphics context for your choice of windowing toolkit,
 * such as AWT, Swing or SWT is intended to be adapted to this interface; the adapeter
 * is then given to a VGLDocumentRenderer when rendering.
 */
public interface VGLRenderingStrategy {
    /** Set fill/stroke color for subsequently rendered elements */
    public void setColor(VGLColor c);

    /**
     * Set font for subsequently rendered strings
     * @param family family of font
     * @param style style of font
     * @param size size of font in pixels
     */
    public void setFont(String family, int style, int size);

    /**
     * Render a solid polygon in the current color
     * @param sx  X coordinate elements
     * @param sy  Y coordinate elements
     * @param n  number of coordinates
     */
    public void fillPolygon(int[] sx, int[] sy, int n);

    /**
     * Render the outline of polygon in the current color
     * @param sx  X coordinate elements
     * @param sy  Y coordinate elements
     * @param n  number of coordinates
     */
    public void drawPolygon(int[] sx, int[] sy, int n);

    /**
     * Render a path in the current color
     * @param sx X coordinate elements
     * @param sy  Y coordinate elements
     * @param n  number of coordinates
     */
    public void drawPath(int[] sx, int[] sy, int n);

    /**
     * Render the outline of an oval in the current color
     * @param x X component of center of oval
     * @param y Y component of center of oval
     * @param width width of oval
     * @param height height of oval
     */
    public void drawOval(int x, int y, int width, int height);

    /**
     * Render a solid oval in the current color
     * @param x X component of center of oval
     * @param y Y component of center of oval
     * @param width width of oval
     * @param height height of oval
     */
    public void fillOval(int x, int y, int width, int height);

    /**
     * Render a line segment in the current color
     * @param x1 X element of start coordinate
     * @param y1 Y element of start coordinate
     * @param x2 X element of end coordinate
     * @param y2 Y element of end coordinate
     */
    public void drawLine(int x1, int y1, int x2, int y2);

    /**
     * Render a string in the current font at the given position
     * @param value the string value
     * @param x x position
     * @param y y position
     */
    public void drawString(String value, int x, int y);

    /*# VerticesSubDivider lnkVerticesSubDivider; */
}
