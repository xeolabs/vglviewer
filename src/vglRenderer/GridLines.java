/* Generated by Together */

package vglRenderer;

import vglDocument.VGLColor;

class GridLines {
    private long gridSize;

    /**
     * @clientCardinality 1
     * @supplierCardinality 1 
     */
    private RenderContext lnkRenderContext;

    /**
     * @clientCardinality 1
     * @supplierCardinality 1 
     */
    private VGLRenderingStrategy lnkVGLRenderingStrategy;
    private final static int MIN_GRID_WIDTH = 10;
    private final static int MIN_GRID_HEIGHT = 10;

    public GridLines(long gridSize) {
        this.gridSize = gridSize;
    }

    private VGLColor computeColor(double xmap) {
        return new VGLColor(150, 150, 150);
    }

    public void render(RenderContext renderContext, VGLRenderingStrategy g) {
            long xmap = renderContext.getXMap();
            long ymap = renderContext.getYMap();
            VGLViewport viewport = renderContext.getViewport();
            VGLWindow window = renderContext.getWindow();
            g.setColor(computeColor(xmap));
            int xInc = (int)((gridSize * xmap) / Constants.SHIFT);
            int yInc = (int)((gridSize * ymap) / Constants.SHIFT);
            if (xInc < MIN_GRID_WIDTH) {
              //  return;
            }
            if (yInc < MIN_GRID_HEIGHT) {
             //  return;
            }
            long xInit = (viewport.xmin / gridSize) * gridSize;
            if (xInit < viewport.xmin) {
                xInit += gridSize;
            }
            int xi = window.xmin + (int)(((xInit - viewport.xmin) * xmap) / Constants.SHIFT);
            while (xi < window.xmax) {
                g.drawLine(xi, window.ymin, xi, window.ymax);
                xi += xInc;
            }
            long yInit = (viewport.ymin / gridSize) * gridSize;
            if (yInit < viewport.ymin) {
                yInit += gridSize;
            }
            int yi = window.ymin + (int)(((yInit - viewport.ymin) * ymap) / Constants.SHIFT);
            while (yi < window.ymax) {
                g.drawLine(window.xmin, yi, window.xmax, yi);
                yi += yInc;
            }

    }
}
